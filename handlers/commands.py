import logging
from aiogram import Router, types, F, Bot
from aiogram.filters import Command
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ChatMemberUpdated
from aiogram.enums import ChatMemberStatus, ParseMode
from config import BOT_USERNAME, GROUP_WELCOME_MESSAGE
from utils.logger import logger

router = Router()

kb = [
    [KeyboardButton(text="‚ùì –ü–æ–º–æ—â—å")],
]
main_keyboard = ReplyKeyboardMarkup(
    keyboard=kb, 
    resize_keyboard=True, 
    input_field_placeholder="–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–µ–¥–∏–∞ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É..."
)

@router.message(Command(commands=["start"]))
async def send_welcome(message: Message):
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞ –≤ —á–∞—Ç–µ {message.chat.id}")
    
    welcome_text = [
        f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}! üëã",
        f"–Ø - {BOT_USERNAME}, –±–æ—Ç –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –º–µ–¥–∏–∞.",
        "",
        "üì∏ –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ —è –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞—é.",
    ]
    
    await message.answer("\n".join(welcome_text), reply_markup=main_keyboard)

@router.message(Command(commands=["stop"]))
async def send_goodbye(message: Message):
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞ –≤ —á–∞—Ç–µ {message.chat.id}")
    goodbye_text = "–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–±—Ä–∞–Ω–∞. –ë–æ—Ç –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–µ–¥–∏–∞."
    await message.answer(goodbye_text, reply_markup=types.ReplyKeyboardRemove())

@router.message(F.text == "‚ùì –ü–æ–º–æ—â—å")
async def show_help_from_button(message: types.Message):
    await cmd_help(message)

@router.message(Command(commands=["help"]))
async def cmd_help(message: types.Message):
    help_text = [
        f"ü§ñ **{BOT_USERNAME}** - –±–æ—Ç –¥–ª—è –ø–æ–º–æ—â–∏ –Ω–µ–∑—Ä—è—á–∏–º.",
        "",
        "**–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:**",
        "1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–π –º–µ–¥–∏–∞-—Ñ–∞–π–ª (—Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –≥–æ–ª–æ—Å–æ–≤–æ–µ).",
        "2. –Ø –æ–ø–∏—à—É —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏–ª–∏ —Å–¥–µ–ª–∞—é —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—é.",
        "",
        "**–ö–æ–º–∞–Ω–¥—ã:**",
        "/start - –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.",
        "/stop - –°–∫—Ä—ã—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –ø–µ—Ä–µ—Å—Ç–∞—Ç—å –æ—Ç–≤–µ—á–∞—Ç—å.",
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.",
        "",
        "–î–ª—è —Ä–∞–±–æ—Ç—ã –≤ –≥—Ä—É–ø–ø–µ, –¥–æ–±–∞–≤—å—Ç–µ –º–µ–Ω—è –∏ –¥–∞–π—Ç–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.",
        "",
        "[–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –Ω–∞ GitHub](https://github.com/aspect-cloud/a_vision)"
    ]
        
    await message.answer("\n".join(help_text), parse_mode=ParseMode.MARKDOWN, disable_web_page_preview=True)
    logger.info(f"–ü–æ–º–æ—â—å –∑–∞–ø—Ä–æ—à–µ–Ω–∞ –≤ —á–∞—Ç–µ {message.chat.id} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.from_user.id}")

@router.my_chat_member()
async def on_bot_promote(event: ChatMemberUpdated, bot: types.Bot):
    logger.info(
        f"–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω –≤ —á–∞—Ç–µ {event.chat.id}. "
        f"–°—Ç–∞—Ä—ã–π —Å—Ç–∞—Ç—É—Å: {event.old_chat_member.status.value}, "
        f"–ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: {event.new_chat_member.status.value}"
    )
    if event.new_chat_member.status == ChatMemberStatus.ADMINISTRATOR and event.new_chat_member.user.id == bot.id:
        try:
            await bot.send_message(event.chat.id, GROUP_WELCOME_MESSAGE, parse_mode="Markdown")
            logger.info(f"–ë–æ—Ç –ø–æ–≤—ã—à–µ–Ω –¥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —á–∞—Ç–µ {event.chat.id}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—ã—à–µ–Ω–∏–∏ –±–æ—Ç–∞ –¥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —á–∞—Ç–µ {event.chat.id}: {e}")